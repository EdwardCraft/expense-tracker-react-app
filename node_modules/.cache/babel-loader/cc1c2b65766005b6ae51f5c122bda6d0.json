{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Proyects\\\\expense-tracker-react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport DUMMY_EXPENSES from \"./components/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    //Will use the espred operator \"...\" to pull out all the existen\n    //array elements  and populate the rest of the new array  with\n    //those existen elementes.\n    setExpenses([expense, ...expenses]);\n  };\n\n  return (\n    /*#__PURE__*/\n    //JSx sintaxis\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n        onAddExpense: addExpenseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n        item: expense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  );\n}; //best practice put new compent into new files\n\n\n_s(App, \"vWte2SAXNm+1bDonaLQzZSzOmNc=\");\n\n_c = App;\nexport default App;\n/*\n\n  State: to tell react to run code again\n  Lifting State up \n  Hooks  \n  Controlled \n  Uncontrolled\n  Stateless \n  Stateful\n  \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/admin/Documents/Proyects/expense-tracker-react-app/src/App.js"],"names":["React","useState","Expenses","NewExpense","DUMMY_EXPENSES","App","expenses","setExpenses","addExpenseHandler","expense"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACG,cAAD,CAAxC;;AAEA,QAAMI,iBAAiB,GAAIC,OAAD,IAAa;AACrC;AACA;AACA;AACAF,IAAAA,WAAW,CAAC,CAACE,OAAD,EAAU,GAAGH,QAAb,CAAD,CAAX;AACD,GALD;;AAOA;AAAA;AACE;AACA;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,YAAY,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAOD,CAjBD,C,CAmBA;;;GAnBMJ,G;;KAAAA,G;AAoBN,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport DUMMY_EXPENSES from \"./components/Constants\";\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    //Will use the espred operator \"...\" to pull out all the existen\n    //array elements  and populate the rest of the new array  with\n    //those existen elementes.\n    setExpenses([expense, ...expenses]);\n  };\n\n  return (\n    //JSx sintaxis\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses item={expense} />\n    </div>\n  );\n};\n\n//best practice put new compent into new files\nexport default App;\n\n/*\n\n  State: to tell react to run code again\n  Lifting State up \n  Hooks  \n  Controlled \n  Uncontrolled\n  Stateless \n  Stateful\n  \n*/\n"]},"metadata":{},"sourceType":"module"}